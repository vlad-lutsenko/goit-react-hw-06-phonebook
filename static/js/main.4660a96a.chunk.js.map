{"version":3,"sources":["components/ContactList/ContactList.module.css","components/InputForm/InputForm.module.css","components/Header/Header.module.css","utils/transitions/pop.module.css","components/ContactsFilter/ContactsFilter.module.css","components/Header/Header.js","redux/withToolkit/actions/contactList.js","redux/withToolkit/types/index.js","components/InputForm/InputForm.js","components/ContactList/ContactList.js","utils/storage/index.js","redux/withToolkit/actions/filter.js","components/ContactsFilter/ContactsFilter.js","App.js","redux/withToolkit/reducers/contactListReducer.js","redux/withToolkit/reducers/index.js","redux/withToolkit/reducers/filterReducer.js","redux/withToolkit/store/index.js","index.js","utils/transitions/slide.module.css"],"names":["module","exports","Header","useState","appear","setAppear","useEffect","className","styles","headerBlock","CSSTransition","in","classNames","slideIn","timeout","mountOnEnter","header","addContact","createAction","deleteContact","setContactList","InputForm","contacts","useSelector","state","dispatch","useDispatch","name","setName","number","setNumber","changeHandler","e","target","value","onSubmit","preventDefault","contactListNames","map","contact","toLowerCase","newContactName","includes","toast","configure","error","id","uuidv4","addContactToList","type","onChange","inputField","disabled","length","btn","ContactList","contactList","filter","filteredList","trim","key","items","localStorage","getItem","JSON","parse","err","Error","get","setItem","stringify","save","unmountOnExit","TransitionGroup","component","popIn","contactListItem","onClick","setFilter","ContactsFilter","input","placeholder","App","initialState","rootReducer","combineReducers","action","payload","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4660a96a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3ycy_\",\"contactListItem\":\"ContactList_contactListItem__3W4NP\",\"name\":\"ContactList_name__38fal\",\"number\":\"ContactList_number__2_W-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"InputForm_inputField__3uM5M\",\"btn\":\"InputForm_btn__2eddt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__3bU5C\",\"header\":\"Header_header__yjS05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3qJN1\",\"enterActive\":\"pop_enterActive__2B6a0\",\"exitActive\":\"pop_exitActive__2kVgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactsFilter_input__6pDGa\"};","import React, { useState, useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./Header.module.css\";\r\nimport slideIn from \"../../utils/transitions/slide.module.css\";\r\n\r\nconst Header = () => {\r\n  const [appear, setAppear] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAppear(true);\r\n  }, []);\r\n\r\n  return (\r\n    <header className={styles.headerBlock}>\r\n      <CSSTransition\r\n        in={appear}\r\n        classNames={slideIn}\r\n        timeout={500}\r\n        mountOnEnter\r\n      >\r\n        <h1 className={styles.header}>Phonebook</h1>\r\n      </CSSTransition>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//--------------action creators ли redux toolkit--------------\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CONTACT_LIST } from \"../types\";\r\n\r\nexport const addContact = createAction(ADD_CONTACT);\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\nexport const setContactList = createAction(SET_CONTACT_LIST);\r\n","// filter\r\nexport const SET_FILTER = \"filter/setFilter\";\r\n\r\n// contactList\r\nexport const ADD_CONTACT = \"contactList/add\";\r\nexport const DELETE_CONTACT = \"contactList/delete\";\r\nexport const SET_CONTACT_LIST = \"contactList/setList\";\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport styles from \"./InputForm.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/withToolkit/actions/contactList\";\r\n\r\nconst InputForm = () => {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const changeHandler = (e) => {\r\n    if (e.target.name === \"name\") {\r\n      setName(e.target.value);\r\n    }\r\n    if (e.target.name === \"number\") {\r\n      setNumber(e.target.value);\r\n    }\r\n  };\r\n\r\n  const addContactToList = () => {\r\n    const contactListNames = contacts.map((contact) =>\r\n      contact.name.toLowerCase()\r\n    );\r\n    const newContactName = name.toLowerCase();\r\n    if (contactListNames.includes(newContactName)) {\r\n      toast.configure();\r\n      toast.error(`${name} is already in your contact list`);\r\n    } else {\r\n      dispatch(addContact({ id: uuidv4(), name: name, number: number }));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    addContactToList();\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={changeHandler}\r\n          className={styles.inputField}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number:\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={changeHandler}\r\n          className={styles.inputField}\r\n        />\r\n      </label>\r\n      <button\r\n        type=\"submit\"\r\n        disabled={!name.length || !number.length}\r\n        className={styles.btn}\r\n      >\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport popIn from \"../../utils/transitions/pop.module.css\";\r\nimport slideIn from \"../../utils/transitions/slide.module.css\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteContact,\r\n  setContactList,\r\n} from \"../../redux/withToolkit/actions/contactList\";\r\nimport { get, save } from \"../../utils/storage\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contactList = useSelector((state) => state.contacts);\r\n  const filter = useSelector((state) => state.filter);\r\n\r\n  const onDelete = (id) => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  const filteredList = contactList.filter(\r\n    (contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim()) ||\r\n      contact.number.includes(filter.trim())\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setContactList(get(\"contacts\")));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    save(\"contacts\", contactList);\r\n  }, [contactList]);\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={!contactList.length}\r\n        timeout={250}\r\n        classNames={slideIn}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <p>Phonebook is empty</p>\r\n      </CSSTransition>\r\n\r\n      <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n        {filteredList.map((contact) => (\r\n          <CSSTransition key={contact.id} classNames={popIn} timeout={250}>\r\n            <li className={styles.contactListItem}>\r\n              <span className={styles.name}>{contact.name}</span>\r\n              <span className={styles.number}>{contact.number}</span>\r\n              <button type=\"button\" onClick={() => onDelete(contact.id)}>\r\n                &#215;\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","export const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const get = (key) => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n","//-----------action creators ли redux toolkit--------------\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { SET_FILTER } from \"../types\";\r\n\r\nexport const setFilter = createAction(SET_FILTER);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactsFilter.module.css\";\r\nimport slideIn from \"../../utils/transitions/slide.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/withToolkit/actions/filter\";\r\n\r\nconst ContactsFilter = () => {\r\n  const contactList = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChangeHandler = (e) => {\r\n    const { value } = e.target;\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={contactList.length > 1}\r\n        classNames={slideIn}\r\n        timeout={250}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          onChange={inputChangeHandler}\r\n          className={styles.input}\r\n          placeholder=\"Enter needed name or number\"\r\n        />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport InputForm from \"./components/InputForm/InputForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactsFilter from \"./components/ContactsFilter/ContactsFilter\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <InputForm />\n      <ContactsFilter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default App;\n","//-----------reducers л▒лхли redux toolkit--------------\r\n\r\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CONTACT_LIST } from \"../types\";\r\n\r\nconst initialState = [];\r\nexport const contactListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return [action.payload, ...state];\r\n\r\n    case DELETE_CONTACT:\r\n      return state.filter((contact) => contact.id !== action.payload);\r\n\r\n    case SET_CONTACT_LIST:\r\n      return [...action.payload, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { filterReducer } from \"../reducers/filterReducer\";\r\nimport { contactListReducer } from \"../reducers/contactListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactListReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// -----------reducers л▒лхли redux toolkit--------------\r\nimport { SET_FILTER } from \"../types\";\r\n\r\nconst initialState = \"\";\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport store from \"./redux/withToolkit/store\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  /* </React.StrictMode>, */\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__i6aFk\",\"enterActive\":\"slide_enterActive__13Ayu\",\"exitActive\":\"slide_exitActive__3I8pp\"};"],"sourceRoot":""}